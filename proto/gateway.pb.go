// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/gateway.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProdRequest struct {
	ProdId               int32    `protobuf:"varint,1,opt,name=prod_id,json=prodId,proto3" json:"prod_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProdRequest) Reset()         { *m = ProdRequest{} }
func (m *ProdRequest) String() string { return proto.CompactTextString(m) }
func (*ProdRequest) ProtoMessage()    {}
func (*ProdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85acbde2a6adc437, []int{0}
}

func (m *ProdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProdRequest.Unmarshal(m, b)
}
func (m *ProdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProdRequest.Marshal(b, m, deterministic)
}
func (m *ProdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProdRequest.Merge(m, src)
}
func (m *ProdRequest) XXX_Size() int {
	return xxx_messageInfo_ProdRequest.Size(m)
}
func (m *ProdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProdRequest proto.InternalMessageInfo

func (m *ProdRequest) GetProdId() int32 {
	if m != nil {
		return m.ProdId
	}
	return 0
}

type ProdResponse struct {
	ProdStock            int32    `protobuf:"varint,1,opt,name=prod_stock,json=prodStock,proto3" json:"prod_stock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProdResponse) Reset()         { *m = ProdResponse{} }
func (m *ProdResponse) String() string { return proto.CompactTextString(m) }
func (*ProdResponse) ProtoMessage()    {}
func (*ProdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85acbde2a6adc437, []int{1}
}

func (m *ProdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProdResponse.Unmarshal(m, b)
}
func (m *ProdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProdResponse.Marshal(b, m, deterministic)
}
func (m *ProdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProdResponse.Merge(m, src)
}
func (m *ProdResponse) XXX_Size() int {
	return xxx_messageInfo_ProdResponse.Size(m)
}
func (m *ProdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProdResponse proto.InternalMessageInfo

func (m *ProdResponse) GetProdStock() int32 {
	if m != nil {
		return m.ProdStock
	}
	return 0
}

type OrderRequest struct {
	OrderId              int64    `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderRequest) Reset()         { *m = OrderRequest{} }
func (m *OrderRequest) String() string { return proto.CompactTextString(m) }
func (*OrderRequest) ProtoMessage()    {}
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85acbde2a6adc437, []int{2}
}

func (m *OrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderRequest.Unmarshal(m, b)
}
func (m *OrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderRequest.Marshal(b, m, deterministic)
}
func (m *OrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderRequest.Merge(m, src)
}
func (m *OrderRequest) XXX_Size() int {
	return xxx_messageInfo_OrderRequest.Size(m)
}
func (m *OrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderRequest proto.InternalMessageInfo

func (m *OrderRequest) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

type OrderResponse struct {
	OrderId              int64                `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	M                    map[string]string    `protobuf:"bytes,4,rep,name=m,proto3" json:"m,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	Any                  *any.Any             `protobuf:"bytes,5,opt,name=any,proto3" json:"any,omitempty"`
	Empty                *empty.Empty         `protobuf:"bytes,6,opt,name=empty,proto3" json:"empty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OrderResponse) Reset()         { *m = OrderResponse{} }
func (m *OrderResponse) String() string { return proto.CompactTextString(m) }
func (*OrderResponse) ProtoMessage()    {}
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85acbde2a6adc437, []int{3}
}

func (m *OrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderResponse.Unmarshal(m, b)
}
func (m *OrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderResponse.Marshal(b, m, deterministic)
}
func (m *OrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderResponse.Merge(m, src)
}
func (m *OrderResponse) XXX_Size() int {
	return xxx_messageInfo_OrderResponse.Size(m)
}
func (m *OrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderResponse proto.InternalMessageInfo

func (m *OrderResponse) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *OrderResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrderResponse) GetM() map[string]string {
	if m != nil {
		return m.M
	}
	return nil
}

func (m *OrderResponse) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *OrderResponse) GetAny() *any.Any {
	if m != nil {
		return m.Any
	}
	return nil
}

func (m *OrderResponse) GetEmpty() *empty.Empty {
	if m != nil {
		return m.Empty
	}
	return nil
}

func init() {
	proto.RegisterType((*ProdRequest)(nil), "proto.ProdRequest")
	proto.RegisterType((*ProdResponse)(nil), "proto.ProdResponse")
	proto.RegisterType((*OrderRequest)(nil), "proto.OrderRequest")
	proto.RegisterType((*OrderResponse)(nil), "proto.OrderResponse")
	proto.RegisterMapType((map[string]string)(nil), "proto.OrderResponse.MEntry")
}

func init() { proto.RegisterFile("proto/gateway.proto", fileDescriptor_85acbde2a6adc437) }

var fileDescriptor_85acbde2a6adc437 = []byte{
	// 441 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xe5, 0x38, 0x4e, 0x9b, 0x49, 0x90, 0x60, 0x12, 0x81, 0xe3, 0x82, 0xb0, 0x7c, 0xa8,
	0x5c, 0x09, 0xbc, 0xc2, 0x70, 0x40, 0xdc, 0x38, 0x54, 0x55, 0x0f, 0x88, 0x68, 0xc3, 0x85, 0x13,
	0xda, 0xd4, 0x4b, 0x64, 0xb5, 0xde, 0x35, 0xf6, 0x26, 0xc8, 0xaa, 0x7a, 0xe1, 0x15, 0x78, 0x06,
	0x9e, 0x88, 0x57, 0xe0, 0x41, 0xd0, 0xfe, 0xb1, 0x44, 0x5a, 0x7a, 0xf2, 0x7c, 0x33, 0x3f, 0x7d,
	0xf6, 0x7c, 0x63, 0x98, 0xd5, 0x8d, 0x54, 0x92, 0x6c, 0x98, 0xe2, 0xdf, 0x59, 0x97, 0x19, 0x85,
	0x81, 0x79, 0x44, 0x4f, 0x37, 0x52, 0x6e, 0xae, 0x38, 0x61, 0x75, 0x49, 0x98, 0x10, 0x52, 0x31,
	0x55, 0x4a, 0xd1, 0x5a, 0x28, 0x7a, 0xee, 0xa6, 0x46, 0xad, 0xb7, 0x5f, 0x89, 0x2a, 0x2b, 0xde,
	0x2a, 0x56, 0xd5, 0x0e, 0x58, 0xdc, 0x06, 0x98, 0x70, 0x2f, 0x88, 0x8e, 0x6e, 0x8f, 0x78, 0x55,
	0x2b, 0x37, 0x4c, 0x8e, 0x61, 0xb2, 0x6c, 0x64, 0x41, 0xf9, 0xb7, 0x2d, 0x6f, 0x15, 0x3e, 0x81,
	0x83, 0xba, 0x91, 0xc5, 0x97, 0xb2, 0x08, 0xbd, 0xd8, 0x4b, 0x03, 0x3a, 0xd2, 0xf2, 0xbc, 0x48,
	0x5e, 0xc2, 0xd4, 0x72, 0x6d, 0x2d, 0x45, 0xcb, 0xf1, 0x19, 0x80, 0x01, 0x5b, 0x25, 0x2f, 0x2e,
	0x1d, 0x3b, 0xd6, 0x9d, 0x95, 0x6e, 0x24, 0x27, 0x30, 0xfd, 0xd8, 0x14, 0xbc, 0xe9, 0x7d, 0x17,
	0x70, 0x28, 0xb5, 0xee, 0x8d, 0x7d, 0x7a, 0x60, 0xf4, 0x79, 0x91, 0xfc, 0x1a, 0xc0, 0x03, 0xc7,
	0x3a, 0xef, 0xfb, 0x61, 0x44, 0x18, 0x0a, 0x56, 0xf1, 0x70, 0x10, 0x7b, 0xe9, 0x98, 0x9a, 0x1a,
	0x4f, 0xc0, 0xab, 0xc2, 0x61, 0xec, 0xa7, 0x93, 0xfc, 0xc8, 0x6e, 0x95, 0xed, 0xf9, 0x65, 0x1f,
	0x4e, 0x85, 0x6a, 0x3a, 0xea, 0x55, 0x98, 0xc1, 0x50, 0x07, 0x17, 0xfa, 0xb1, 0x97, 0x4e, 0xf2,
	0x28, 0xb3, 0xc9, 0x64, 0x7d, 0x32, 0xd9, 0xa7, 0x3e, 0x55, 0x6a, 0x38, 0x3c, 0x06, 0x9f, 0x89,
	0x2e, 0x0c, 0x0c, 0x3e, 0xbf, 0x83, 0xbf, 0x17, 0x1d, 0xd5, 0x00, 0xbe, 0x80, 0xc0, 0x84, 0x1a,
	0x8e, 0x0c, 0xf9, 0xf8, 0x0e, 0x79, 0xaa, 0xa7, 0xd4, 0x42, 0xd1, 0x1b, 0x18, 0xd9, 0x4f, 0xc2,
	0x87, 0xe0, 0x5f, 0xf2, 0xce, 0x2c, 0x39, 0xa6, 0xba, 0xc4, 0x39, 0x04, 0x3b, 0x76, 0xb5, 0xed,
	0x37, 0xb4, 0xe2, 0xdd, 0xe0, 0xad, 0x97, 0xaf, 0xed, 0xa5, 0x56, 0xbc, 0xd9, 0x95, 0x17, 0x1c,
	0x57, 0x30, 0x3d, 0xe3, 0x6a, 0xd9, 0x27, 0x8e, 0xe8, 0x56, 0xff, 0xe7, 0x9a, 0xd1, 0x6c, 0xaf,
	0x67, 0xd3, 0x48, 0xa2, 0x1f, 0xbf, 0xff, 0xfc, 0x1c, 0xcc, 0x11, 0xc9, 0xee, 0x95, 0xfe, 0x27,
	0x0a, 0x72, 0xed, 0x4e, 0x7e, 0x93, 0x7f, 0x86, 0xc0, 0x44, 0x87, 0x4b, 0x38, 0x3c, 0xe3, 0xca,
	0xd6, 0xb3, 0xfd, 0x50, 0xad, 0xf5, 0xfc, 0x7f, 0x49, 0x27, 0x0b, 0xe3, 0x3d, 0xc3, 0x47, 0xc4,
	0x1c, 0x8c, 0x5c, 0xf7, 0x77, 0xbc, 0x59, 0x8f, 0x0c, 0xff, 0xfa, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x71, 0xf8, 0x43, 0x50, 0x04, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProdServiceClient is the client API for ProdService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProdServiceClient interface {
	GetProdStock(ctx context.Context, in *ProdRequest, opts ...grpc.CallOption) (*ProdResponse, error)
}

type prodServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProdServiceClient(cc grpc.ClientConnInterface) ProdServiceClient {
	return &prodServiceClient{cc}
}

func (c *prodServiceClient) GetProdStock(ctx context.Context, in *ProdRequest, opts ...grpc.CallOption) (*ProdResponse, error) {
	out := new(ProdResponse)
	err := c.cc.Invoke(ctx, "/proto.ProdService/GetProdStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProdServiceServer is the server API for ProdService service.
type ProdServiceServer interface {
	GetProdStock(context.Context, *ProdRequest) (*ProdResponse, error)
}

// UnimplementedProdServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProdServiceServer struct {
}

func (*UnimplementedProdServiceServer) GetProdStock(ctx context.Context, req *ProdRequest) (*ProdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProdStock not implemented")
}

func RegisterProdServiceServer(s *grpc.Server, srv ProdServiceServer) {
	s.RegisterService(&_ProdService_serviceDesc, srv)
}

func _ProdService_GetProdStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProdServiceServer).GetProdStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProdService/GetProdStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProdServiceServer).GetProdStock(ctx, req.(*ProdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProdService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ProdService",
	HandlerType: (*ProdServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProdStock",
			Handler:    _ProdService_GetProdStock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/gateway.proto",
}

// OrderClient is the client API for Order service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderClient interface {
	GetOrder(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderResponse, error)
}

type orderClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderClient(cc grpc.ClientConnInterface) OrderClient {
	return &orderClient{cc}
}

func (c *orderClient) GetOrder(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderResponse, error) {
	out := new(OrderResponse)
	err := c.cc.Invoke(ctx, "/proto.Order/GetOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServer is the server API for Order service.
type OrderServer interface {
	GetOrder(context.Context, *OrderRequest) (*OrderResponse, error)
}

// UnimplementedOrderServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServer struct {
}

func (*UnimplementedOrderServer) GetOrder(ctx context.Context, req *OrderRequest) (*OrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrder not implemented")
}

func RegisterOrderServer(s *grpc.Server, srv OrderServer) {
	s.RegisterService(&_Order_serviceDesc, srv)
}

func _Order_GetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).GetOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Order/GetOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).GetOrder(ctx, req.(*OrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Order_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Order",
	HandlerType: (*OrderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOrder",
			Handler:    _Order_GetOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/gateway.proto",
}
